<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>me.erano.com</groupId>
	<artifactId>SpringFrameworkStudy-6.1.3</artifactId>
	<version>1.0</version>
	<packaging>pom</packaging>

	<properties>
		<spring.version>6.1.3</spring.version>
	</properties>

	<dependencies>
		<!-- Basic building block for Spring that in conjunction with Spring
		Beans provides dependency injection and IoC features.-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- Spring Context provides access to configured objects like a
		registry (a context). It inherits its features from Spring Beans and
		adds support for internationalization, event propagation, resource
		loading, and the transparent creation of contexts.-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- Spring Beans provides the configuration framework and basic
		functionality to instantiate, configure, and assemble java objects.
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- Spring Web provides integration features such as multipart file
		upload functionality and the initialization of the IoC container using
		Servlet listeners and a web-oriented application context. It also
		contains an HTTP client and the web-related parts of Spring remote
		support.-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- Spring webmvc contains Springâ€™s model-view-controller (MVC) and
		REST Web Services implementation for web applications. It provides a
		clean separation between domain model code and web forms and integrates
		with all of the other features of the Spring Framework.-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- Spring JDBC provides an abstraction layer that simplifies code to
		use JDBC and the parsing of database-vendor specific error codes.-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- Support for programmatic and declarative transaction management for
		classes that implement special interfaces or any POJO.-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- Spring AOP provides an Alliance-compliant aspect-oriented
		programming implementation allowing you to define method interceptors
		and pointcuts to cleanly decouple code that implements functionality
		that should be separated.-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- Spring Object/Relational Mapping which provides integration layers
		for popular object-relational mapping APIs, including JPA, JDO, and
		Hibernate.-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- Spring Test supports the unit testing and integration testing of
		Spring components with JUnit or TestNG. It provides consistent loading
		and caching of Spring ApplicationContexts and provides mock objects that
		you can use to test your code in isolation.-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Powerful Expression Language for querying and manipulating an
		object graph at runtime. It is an extension of the unified expression
		language (unified EL) as specified in the JSP 2.1 specification-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${spring.version}</version>
		</dependency>

	</dependencies>


</project>